// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sMuK5QvKwWGrkw9DYJKXqS
// Component: ly8A8hR8IqkD
import * as React from "react";
import {
  PlasmicImg as PlasmicImg__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  useCurrentUser
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Button from "../../Button"; // plasmic-import: Humveg51WdE0/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: sMuK5QvKwWGrkw9DYJKXqS/projectcss
import sty from "./PlasmicMeetTheTriple.module.css"; // plasmic-import: ly8A8hR8IqkD/css
import marchP1WebpQF17X1X9X04F from "./images/marchP1Webp.webp"; // plasmic-import: qF17x1x9X04F/picture

createPlasmicElementProxy;

export const PlasmicMeetTheTriple__VariantProps = new Array();

export const PlasmicMeetTheTriple__ArgProps = new Array();

const $$ = {};

function PlasmicMeetTheTriple__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.root
      )}
    >
      <PlasmicImg__
        data-plasmic-name={"img"}
        data-plasmic-override={overrides.img}
        alt={""}
        className={classNames(sty.img)}
        displayHeight={"654px"}
        displayMaxHeight={"none"}
        displayMaxWidth={"100%"}
        displayMinHeight={"0"}
        displayMinWidth={"0"}
        displayWidth={"100%"}
        height={"100%"}
        loading={"lazy"}
        src={{
          src: marchP1WebpQF17X1X9X04F,
          fullWidth: 1500,
          fullHeight: 778,
          aspectRatio: undefined
        }}
        width={"100%"}
      />

      <div
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        className={classNames(projectcss.all, sty.freeBox)}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__o0ZL
          )}
        >
          <React.Fragment>
            <React.Fragment>{""}</React.Fragment>
            {
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                {"MEET THE TRIPLE THREAT COLLECTION"}
              </h1>
            }

            <React.Fragment>{""}</React.Fragment>
          </React.Fragment>
        </div>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__zGwMl
          )}
        >
          {
            "Our latest limited-edition collection inspired by fun outside and those who ride."
          }
        </div>
        <Button
          data-plasmic-name={"button"}
          data-plasmic-override={overrides.button}
          className={classNames("__wab_instance", sty.button)}
          color={"blue"}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__p1Ywb
            )}
          >
            {"Discover triple treat"}
          </div>
        </Button>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "img", "freeBox", "h1", "button"],
  img: ["img"],
  freeBox: ["freeBox", "h1", "button"],
  h1: ["h1"],
  button: ["button"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicMeetTheTriple__ArgProps,
          internalVariantPropNames: PlasmicMeetTheTriple__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicMeetTheTriple__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicMeetTheTriple";
  } else {
    func.displayName = `PlasmicMeetTheTriple.${nodeName}`;
  }
  return func;
}

export const PlasmicMeetTheTriple = Object.assign(
  // Top-level PlasmicMeetTheTriple renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    img: makeNodeComponent("img"),
    freeBox: makeNodeComponent("freeBox"),
    h1: makeNodeComponent("h1"),
    button: makeNodeComponent("button"),
    // Metadata about props expected for PlasmicMeetTheTriple
    internalVariantProps: PlasmicMeetTheTriple__VariantProps,
    internalArgProps: PlasmicMeetTheTriple__ArgProps
  }
);

export default PlasmicMeetTheTriple;
/* prettier-ignore-end */
