// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sMuK5QvKwWGrkw9DYJKXqS
// Component: 3bwYd8h7M2ky
import * as React from "react";
import {
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicImg as PlasmicImg__,
  PlasmicPageGuard as PlasmicPageGuard__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  generateOnMutateForSpec,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  initializeCodeComponentStates,
  useCurrentUser,
  useDollarState
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import Cartdrawer from "../../Cartdrawer"; // plasmic-import: c5HiDm6LGjFo/component
import Button from "../../Button"; // plasmic-import: Humveg51WdE0/component
import { DataFetcher } from "@plasmicpkgs/plasmic-query";
import Card from "../../Card"; // plasmic-import: Hs8TCF6h8IMi/component
import { Video } from "@plasmicpkgs/plasmic-basic-components";
import { SliderWrapper } from "@plasmicpkgs/react-slick";
import { sliderHelpers as SliderWrapper_Helpers } from "@plasmicpkgs/react-slick";
import SkullcandyFooter from "../../SkullcandyFooter"; // plasmic-import: vsk85xXTIg3V/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: sMuK5QvKwWGrkw9DYJKXqS/projectcss
import sty from "./PlasmicEcommerceCart.module.css"; // plasmic-import: 3bwYd8h7M2ky/css
import ttn1JpgWj3Pixs8XyZ from "./images/ttn1Jpg.jpg"; // plasmic-import: Wj3PIXS8XY-z/picture
import ttNjpgFPt06BPegLk from "./images/ttNjpg.jpg"; // plasmic-import: FPt06bPeg_Lk/picture
import ttn3JpgWKm90EbGYaJ from "./images/ttn3Jpg.jpg"; // plasmic-import: _wKm90ebGYaJ/picture
import ttn4JpgJlXyWqOi2Iup from "./images/ttn4Jpg.jpg"; // plasmic-import: JlXyWqOi2iup/picture

createPlasmicElementProxy;

export const PlasmicEcommerceCart__VariantProps = new Array();

export const PlasmicEcommerceCart__ArgProps = new Array();

const $$ = {};

function PlasmicEcommerceCart__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "sliderCarousel.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,
        refName: "sliderCarousel",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"landingPage"}
          data-plasmic-override={overrides.landingPage}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.landingPage
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox___4ESg)}>
            <div className={classNames(projectcss.all, sty.freeBox__xUf7)}>
              <div className={classNames(projectcss.all, sty.freeBox__uLdal)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__dEvHt)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  onClick={async event => {
                    const $steps = {};
                    $steps["goToEcommerceCart"] = true
                      ? (() => {
                          const actionArgs = { destination: `/productpage` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              location.assign(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToEcommerceCart"] != null &&
                      typeof $steps["goToEcommerceCart"] === "object" &&
                      typeof $steps["goToEcommerceCart"].then === "function"
                    ) {
                      $steps["goToEcommerceCart"] = await $steps[
                        "goToEcommerceCart"
                      ];
                    }
                  }}
                  src={
                    "https://www.skullcandy.com/cdn/shop/files/skdylogosvg.svg?v=1710432982&width=150"
                  }
                />
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__osMbn)}>
                <div className={classNames(projectcss.all, sty.columns__dzVfv)}>
                  <div className={classNames(projectcss.all, sty.column__xVjw)}>
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___43GH
                      )}
                      href={`/productpage`}
                    >
                      {"Headphones"}
                    </a>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__cFs0W)}
                  >
                    <a
                      data-plasmic-name={"earbuds"}
                      data-plasmic-override={overrides.earbuds}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.earbuds
                      )}
                      href={`/products`}
                    >
                      {"Earbuds"}
                    </a>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___7LSgu)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__f3Hz
                      )}
                      href={`/products`}
                    >
                      {"Gaming"}
                    </a>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__t0LEk)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__k3Yd
                      )}
                    >
                      {"Explore"}
                    </div>
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__ywTmf)}>
                <Cartdrawer
                  data-plasmic-name={"cartdrawer"}
                  data-plasmic-override={overrides.cartdrawer}
                  className={classNames("__wab_instance", sty.cartdrawer)}
                />
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__v8Uup)}>
            <div className={classNames(projectcss.all, sty.freeBox__v17S)}>
              <section
                data-plasmic-name={"section"}
                data-plasmic-override={overrides.section}
                className={classNames(projectcss.all, sty.section)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__xjy4)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__a0Mqh)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={
                      "https://www.skullcandy.com/cdn/shop/files/MARCH_P1.png?v=1709239680&width=1500"
                    }
                    width={"100%"}
                  />

                  <div className={classNames(projectcss.all, sty.freeBox__hsX)}>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___296
                      )}
                    >
                      {"MEET THE TRIPLE THREAT COLLECTION\n"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r4Nt
                      )}
                    >
                      {
                        "Our latest limited-edition collection inspired by fun outside and those who ride."
                      }
                    </div>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__t3017
                      )}
                      onClick={async event => {
                        const $steps = {};
                        $steps["goToProducts"] = true
                          ? (() => {
                              const actionArgs = { destination: `/products` };
                              return (({ destination }) => {
                                if (
                                  typeof destination === "string" &&
                                  destination.startsWith("#")
                                ) {
                                  document
                                    .getElementById(destination.substr(1))
                                    .scrollIntoView({ behavior: "smooth" });
                                } else {
                                  location.assign(destination);
                                }
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["goToProducts"] != null &&
                          typeof $steps["goToProducts"] === "object" &&
                          typeof $steps["goToProducts"].then === "function"
                        ) {
                          $steps["goToProducts"] = await $steps["goToProducts"];
                        }
                      }}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uoUu
                        )}
                      >
                        {"DISCOVER TRIPLE THREAT"}
                      </div>
                    </Button>
                  </div>
                </div>
              </section>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___2EkIt)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns___7B8Vv)}
              >
                <div className={classNames(projectcss.all, sty.column__gnKAt)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__k9Gg)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gZba5
                      )}
                    >
                      {"OUR MOST\nSUSTAINABLE\nEARBUDS EVER"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qwQBr
                      )}
                    >
                      {"LEARN ABOUT ECOBUDS >"}
                    </div>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__x7IS)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={
                        "https://www.skullcandy.com/cdn/shop/files/p2.png?v=1709695432"
                      }
                    />
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__gsAiq)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__jEni7)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nEFh3
                      )}
                    >
                      {"CRANK THE\nBASS"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yV6H
                      )}
                    >
                      {"SHOP CRUSHER ANC 2 >"}
                    </div>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__d3UV)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={
                        "https://www.skullcandy.com/cdn/shop/files/HP-p3-2x2_Mia_Brooks-Crusher-ANC-2.png?v=1710438357"
                      }
                    />
                  </div>
                </div>
              </Stack__>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__knF6G)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___3H3Ki
              )}
            >
              {"WHAT'S HOT"}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__ulKn5)}>
            <DataFetcher
              data-plasmic-name={"httpRestApiFetcher"}
              data-plasmic-override={overrides.httpRestApiFetcher}
              className={classNames("__wab_instance", sty.httpRestApiFetcher)}
              dataName={"fetchedData"}
              errorDisplay={
                <DataCtxReader__>
                  {$ctx => "Error fetching data"}
                </DataCtxReader__>
              }
              errorName={"fetchError"}
              headers={{
                "Content-Type": "application/json",
                Accept: "application/json"
              }}
              loadingDisplay={
                <DataCtxReader__>{$ctx => "Loading..."}</DataCtxReader__>
              }
              method={"GET"}
              noLayout={false}
              url={"https://shoppingcart-n5cf.onrender.com/products"}
            >
              <DataCtxReader__>
                {$ctx => (
                  <div
                    className={classNames(projectcss.all, sty.columns__djZZk)}
                  >
                    {(_par =>
                      !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                      (() => {
                        try {
                          return $ctx.fetchedData.slice(0, 3);
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    ).map((__plasmic_item_0, __plasmic_idx_0) => {
                      const currentItem = __plasmic_item_0;
                      const currentIndex = __plasmic_idx_0;
                      return (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__b3Yij
                          )}
                          key={currentIndex}
                        >
                          <Card
                            data-plasmic-name={"card"}
                            data-plasmic-override={overrides.card}
                            className={classNames("__wab_instance", sty.card)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__yf1RQ
                              )}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img__gfv5M)}
                                displayHeight={"auto"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"auto"}
                                height={"100%"}
                                loading={"lazy"}
                                onClick={async event => {
                                  const $steps = {};
                                  $steps["goToProductpage"] = true
                                    ? (() => {
                                        const actionArgs = {
                                          destination: `/product-2/${(() => {
                                            try {
                                              return currentItem.id;
                                            } catch (e) {
                                              if (
                                                e instanceof TypeError ||
                                                e?.plasmicType ===
                                                  "PlasmicUndefinedDataError"
                                              ) {
                                                return "";
                                              }
                                              throw e;
                                            }
                                          })()}`
                                        };
                                        return (({ destination }) => {
                                          if (
                                            typeof destination === "string" &&
                                            destination.startsWith("#")
                                          ) {
                                            document
                                              .getElementById(
                                                destination.substr(1)
                                              )
                                              .scrollIntoView({
                                                behavior: "smooth"
                                              });
                                          } else {
                                            location.assign(destination);
                                          }
                                        })?.apply(null, [actionArgs]);
                                      })()
                                    : undefined;
                                  if (
                                    $steps["goToProductpage"] != null &&
                                    typeof $steps["goToProductpage"] ===
                                      "object" &&
                                    typeof $steps["goToProductpage"].then ===
                                      "function"
                                  ) {
                                    $steps["goToProductpage"] = await $steps[
                                      "goToProductpage"
                                    ];
                                  }
                                }}
                                src={(() => {
                                  try {
                                    return currentItem.image;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "https://www.skullcandy.com/cdn/shop/files/crusher_evo_buy_box_true_black_1_400x.png?v=1709673991";
                                    }
                                    throw e;
                                  }
                                })()}
                                width={"100%"}
                              />
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__w6XDp
                              )}
                            >
                              <React.Fragment>
                                {(() => {
                                  try {
                                    return currentItem.name;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "Crusher\u00ae Evo";
                                    }
                                    throw e;
                                  }
                                })()}
                              </React.Fragment>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__hIUkw
                              )}
                            >
                              <React.Fragment>
                                {(() => {
                                  try {
                                    return currentItem.description;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "Sensory Bass Headphones with Personal Sound";
                                    }
                                    throw e;
                                  }
                                })()}
                              </React.Fragment>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__iTpwC
                              )}
                            >
                              <React.Fragment>
                                {(() => {
                                  try {
                                    return currentItem.price;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "$169.99";
                                    }
                                    throw e;
                                  }
                                })()}
                              </React.Fragment>
                            </div>
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__iLra5
                              )}
                              onClick={async event => {
                                const $steps = {};
                                $steps["runCode"] = true
                                  ? (() => {
                                      const actionArgs = {
                                        customFunction: async () => {
                                          return (() => {
                                            return fetch(
                                              "https://shoppingcart-n5cf.onrender.com/cart",
                                              {
                                                method: "POST",
                                                headers: {
                                                  "Content-Type":
                                                    "application/json"
                                                },
                                                body: JSON.stringify({
                                                  productId: currentItem.id,
                                                  quantity: 1
                                                })
                                              }
                                            );
                                          })();
                                        }
                                      };
                                      return (({ customFunction }) => {
                                        return customFunction();
                                      })?.apply(null, [actionArgs]);
                                    })()
                                  : undefined;
                                if (
                                  $steps["runCode"] != null &&
                                  typeof $steps["runCode"] === "object" &&
                                  typeof $steps["runCode"].then === "function"
                                ) {
                                  $steps["runCode"] = await $steps["runCode"];
                                }
                              }}
                            >
                              {"ADD TO CART"}
                            </Button>
                          </Card>
                        </div>
                      );
                    })}
                  </div>
                )}
              </DataCtxReader__>
            </DataFetcher>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__iLkmk)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hHlls
              )}
            >
              {"COLLECTIONS"}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__dFho9)}>
            <div className={classNames(projectcss.all, sty.columns__vpjPy)}>
              <div className={classNames(projectcss.all, sty.column__jBq3S)}>
                <div className={classNames(projectcss.all, sty.freeBox__eNkhs)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__voezh)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={
                      "https://www.skullcandy.com/cdn/shop/files/Group_3791.jpg?v=1709240819"
                    }
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__i3Wgk
                    )}
                  >
                    {"SHOP\nTRIPLE\nTREAT"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column__rvlP)}>
                <div className={classNames(projectcss.all, sty.freeBox__qU1Qr)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__knka3)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={
                      "https://www.skullcandy.com/cdn/shop/files/Group_3792.jpg?v=1709240802"
                    }
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gNK
                    )}
                  >
                    {"SHOP\nTRIPLE\nTREAT"}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column__hovJx)}>
                <div className={classNames(projectcss.all, sty.freeBox__lxQoc)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__h54Vf)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={
                      "https://www.skullcandy.com/cdn/shop/files/HP-Collections_shop-Speakers_stomp_c6060308-1c1a-4c61-aa24-77e0144b9d69.png?v=1710378555"
                    }
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ieJrk
                    )}
                  >
                    {"SHOP\nTRIPLE\nTREAT"}
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox___0UY8U)}>
            <div className={classNames(projectcss.all, sty.freeBox__bpVui)}>
              <Video
                data-plasmic-name={"htmlVideo"}
                data-plasmic-override={overrides.htmlVideo}
                autoPlay={true}
                className={classNames("__wab_instance", sty.htmlVideo)}
                controls={true}
                src={
                  "https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm"
                }
              />
            </div>
            <h1
              data-plasmic-name={"h1"}
              data-plasmic-override={overrides.h1}
              className={classNames(
                projectcss.all,
                projectcss.h1,
                projectcss.__wab_text,
                sty.h1
              )}
            >
              {"JOIN THE COMMUNITY"}
            </h1>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__bAq
              )}
            >
              {"Follow us on social media and show us how you #skullcandy"}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__g5Xrt)}>
              <div className={classNames(projectcss.all, sty.columns__rmDOm)}>
                <div className={classNames(projectcss.all, sty.column__v0Te)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___5QnuG)}
                    displayHeight={"437px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"437px"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: ttn1JpgWj3Pixs8XyZ,
                      fullWidth: 1440,
                      fullHeight: 1440,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__sUcLq)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__nWzi)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: ttNjpgFPt06BPegLk,
                      fullWidth: 1440,
                      fullHeight: 1800,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__hl2Jc)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__k02Si)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: ttn3JpgWKm90EbGYaJ,
                      fullWidth: 1440,
                      fullHeight: 1800,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__qApUc)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__mIi3Z)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: ttn4JpgJlXyWqOi2Iup,
                      fullWidth: 1440,
                      fullHeight: 1800,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
              {(() => {
                const child$Props = {
                  beforeChange: generateStateOnChangePropForCodeComponents(
                    $state,
                    "currentSlide",
                    ["sliderCarousel", "currentSlide"],
                    SliderWrapper_Helpers
                  ),
                  className: classNames("__wab_instance", sty.sliderCarousel),
                  initialSlide: generateStateValueProp($state, [
                    "sliderCarousel",
                    "currentSlide"
                  ]),
                  ref: ref => {
                    $refs["sliderCarousel"] = ref;
                  },
                  sliderScopeClassName: sty["sliderCarousel__slider"]
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "currentSlide",
                      plasmicStateName: "sliderCarousel.currentSlide"
                    }
                  ],

                  [],
                  SliderWrapper_Helpers ?? {},
                  child$Props
                );
                return (
                  <SliderWrapper
                    data-plasmic-name={"sliderCarousel"}
                    data-plasmic-override={overrides.sliderCarousel}
                    {...child$Props}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mlUhf)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__y9Cu
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__mMHyC)}
                          displayHeight={"437px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"437px"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: ttn1JpgWj3Pixs8XyZ,
                            fullWidth: 1440,
                            fullHeight: 1440,
                            aspectRatio: undefined
                          }}
                        />

                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img___6UvKj)}
                          displayHeight={"437px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"437px"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          loading={"lazy"}
                          src={{
                            src: ttNjpgFPt06BPegLk,
                            fullWidth: 1440,
                            fullHeight: 1800,
                            aspectRatio: undefined
                          }}
                        />

                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__w4P85)}
                          displayHeight={"437px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: ttn3JpgWKm90EbGYaJ,
                            fullWidth: 1440,
                            fullHeight: 1800,
                            aspectRatio: undefined
                          }}
                        />

                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__o3Kcd)}
                          displayHeight={"437px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"437px"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: ttn4JpgJlXyWqOi2Iup,
                            fullWidth: 1440,
                            fullHeight: 1800,
                            aspectRatio: undefined
                          }}
                        />

                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__h449M)}
                          displayHeight={"437px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"437px"}
                          loading={"lazy"}
                          src={{
                            src: ttNjpgFPt06BPegLk,
                            fullWidth: 1440,
                            fullHeight: 1800,
                            aspectRatio: undefined
                          }}
                        />

                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__dB5Hp)}
                          displayHeight={"437px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"437px"}
                          loading={"lazy"}
                          src={{
                            src: ttn1JpgWj3Pixs8XyZ,
                            fullWidth: 1440,
                            fullHeight: 1440,
                            aspectRatio: undefined
                          }}
                        />

                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img___3Yhks)}
                          displayHeight={"431px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"431px"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          loading={"lazy"}
                        />
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mnCr)}
                    />
                  </SliderWrapper>
                );
              })()}
            </div>
            <SkullcandyFooter
              data-plasmic-name={"skullcandyFooter"}
              data-plasmic-override={overrides.skullcandyFooter}
              className={classNames("__wab_instance", sty.skullcandyFooter)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  landingPage: [
    "landingPage",
    "earbuds",
    "cartdrawer",
    "section",
    "httpRestApiFetcher",
    "card",
    "htmlVideo",
    "h1",
    "sliderCarousel",
    "skullcandyFooter"
  ],

  earbuds: ["earbuds"],
  cartdrawer: ["cartdrawer"],
  section: ["section"],
  httpRestApiFetcher: ["httpRestApiFetcher", "card"],
  card: ["card"],
  htmlVideo: ["htmlVideo"],
  h1: ["h1"],
  sliderCarousel: ["sliderCarousel"],
  skullcandyFooter: ["skullcandyFooter"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicEcommerceCart__ArgProps,
          internalVariantPropNames: PlasmicEcommerceCart__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicEcommerceCart__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "landingPage") {
    func.displayName = "PlasmicEcommerceCart";
  } else {
    func.displayName = `PlasmicEcommerceCart.${nodeName}`;
  }
  return func;
}

function withPlasmicPageGuard(WrappedComponent) {
  const PageGuard = props => (
    <PlasmicPageGuard__
      minRole={null}
      appId={"sMuK5QvKwWGrkw9DYJKXqS"}
      authorizeEndpoint={"https://studio.plasmic.app/authorize"}
      canTriggerLogin={true}
    >
      <WrappedComponent {...props} />
    </PlasmicPageGuard__>
  );

  return PageGuard;
}

function withUsePlasmicAuth(WrappedComponent) {
  const WithUsePlasmicAuthComponent = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "sMuK5QvKwWGrkw9DYJKXqS"
    });
    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicEcommerceCart = Object.assign(
  // Top-level PlasmicEcommerceCart renders the root element
  withUsePlasmicAuth(withPlasmicPageGuard(makeNodeComponent("landingPage"))),
  {
    // Helper components rendering sub-elements
    earbuds: makeNodeComponent("earbuds"),
    cartdrawer: makeNodeComponent("cartdrawer"),
    section: makeNodeComponent("section"),
    httpRestApiFetcher: makeNodeComponent("httpRestApiFetcher"),
    card: makeNodeComponent("card"),
    htmlVideo: makeNodeComponent("htmlVideo"),
    h1: makeNodeComponent("h1"),
    sliderCarousel: makeNodeComponent("sliderCarousel"),
    skullcandyFooter: makeNodeComponent("skullcandyFooter"),
    // Metadata about props expected for PlasmicEcommerceCart
    internalVariantProps: PlasmicEcommerceCart__VariantProps,
    internalArgProps: PlasmicEcommerceCart__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "sadf",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicEcommerceCart;
/* prettier-ignore-end */
