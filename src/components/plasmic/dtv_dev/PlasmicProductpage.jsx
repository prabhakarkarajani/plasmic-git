// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sMuK5QvKwWGrkw9DYJKXqS
// Component: 9XGMtbgMgxd4
import * as React from "react";
import {
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicImg as PlasmicImg__,
  PlasmicPageGuard as PlasmicPageGuard__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  useCurrentUser,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import { usePlasmicDataOp } from "@plasmicapp/react-web/lib/data-sources";
import Skullnavbar from "../../Skullnavbar"; // plasmic-import: 8kXWecR7xP8z/component
import Button from "../../Button"; // plasmic-import: Humveg51WdE0/component
import { AntdAccordion } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { accordionHelpers as AntdAccordion_Helpers } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { AntdAccordionItem } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import Imagesecom from "../../Imagesecom"; // plasmic-import: zq2i0ICbKSqp/component
import SkullcandyFooter from "../../SkullcandyFooter"; // plasmic-import: vsk85xXTIg3V/component
import { useScreenVariants as useScreenVariantscVfb4YQ8QuPw } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: CVfb4yQ8quPw/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: sMuK5QvKwWGrkw9DYJKXqS/projectcss
import sty from "./PlasmicProductpage.module.css"; // plasmic-import: 9XGMtbgMgxd4/css
import smallhpswebpMCwfsACvTtVq from "./images/smallhpswebp.webp"; // plasmic-import: mCwfsACvTtVq/picture
import crusherEvoBuyBoxTrueBlack2WebpRYagEe7Mxck from "./images/crusherEvoBuyBoxTrueBlack2Webp.webp"; // plasmic-import: rYagEE-7MXCK/picture
import crusherEvoBuyBoxTrueBlack3WebpTustGx3FvYGn from "./images/crusherEvoBuyBoxTrueBlack3Webp.webp"; // plasmic-import: tustGx3fvYGn/picture
import crusherEvoBuyBoxTrueBlack4Webp1VxxKAmUrIcd from "./images/crusherEvoBuyBoxTrueBlack4Webp.webp"; // plasmic-import: 1VxxKAmUrIcd/picture
import crusherEvoBuyBoxTrueBlack5WebpIuUe1EpNhwm3 from "./images/crusherEvoBuyBoxTrueBlack5Webp.webp"; // plasmic-import: iuUE1EpNHWM3/picture
import shopPaypngFiDDthMvyXMn from "./images/shopPaypng.png"; // plasmic-import: fiDDthMvyXMn/picture
import crusherEvoBuyBoxMidnightPlum1WebpDR9DwE8ZCx5 from "./images/crusherEvoBuyBoxMidnightPlum1Webp.webp"; // plasmic-import: d_R9dwE8zCx5/picture
import crusherEvoChillGreyBuyBox1WebpP1EyhkuUdZpD from "./images/crusherEvoChillGreyBuyBox1Webp.webp"; // plasmic-import: P1EyhkuUdZpD/picture
import newBurtonCrusherRenderwebp6DudZzSkf9Yn from "./images/newBurtonCrusherRenderwebp.webp"; // plasmic-import: 6dudZZSkf9Yn/picture
import localShippingBlack24DpSmallsvgZckk7RyEIl from "./images/localShippingBlack24DpSmallsvg.svg"; // plasmic-import: zckk7Ry__EIl/picture
import verifiedBlack24DpSmallsvgMfhCo86X7EdH from "./images/verifiedBlack24DpSmallsvg.svg"; // plasmic-import: mfhCO86X7EdH/picture
import swapHorizBlack24DpSmallsvgMgwLQbPCdH3E from "./images/swapHorizBlack24DpSmallsvg.svg"; // plasmic-import: MgwLQbPCdH3E/picture

createPlasmicElementProxy;

export const PlasmicProductpage__VariantProps = new Array();

export const PlasmicProductpage__ArgProps = new Array();

const $$ = {};

function PlasmicProductpage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  let [$queries, setDollarQueries] = React.useState({});
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "variable",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "accordion[].activePanelId",
        type: "private",
        variableType: "text",
        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: $queries,
    $refs
  });
  const new$Queries = {
    productDetails: usePlasmicDataOp(() => {
      return {
        sourceId: "oAqXJAkB6tioCBekFn2cJk",
        opId: "d055b755-3d13-4766-aab1-ab9675261f0e",
        userArgs: {
          path: [$ctx.params.id]
        },
        cacheKey: `plasmic.$.${(() => {
          try {
            return undefined;
          } catch (e) {
            if (
              e instanceof TypeError ||
              e?.plasmicType === "PlasmicUndefinedDataError"
            ) {
              return "";
            }
            throw e;
          }
        })()}.$.d055b755-3d13-4766-aab1-ab9675261f0e.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    })
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);
    $queries = new$Queries;
  }
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantscVfb4YQ8QuPw()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__nn8Q)}>
            <Skullnavbar
              data-plasmic-name={"skullnavbar"}
              data-plasmic-override={overrides.skullnavbar}
              className={classNames("__wab_instance", sty.skullnavbar)}
            />

            {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
              (() => {
                try {
                  return [2];
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return [];
                  }
                  throw e;
                }
              })()
            ).map((__plasmic_item_0, __plasmic_idx_0) => {
              const currentItem = __plasmic_item_0;
              const currentIndex = __plasmic_idx_0;
              return (
                <div
                  className={classNames(projectcss.all, sty.freeBox__cPhNa)}
                  key={currentIndex}
                >
                  <div
                    className={classNames(projectcss.all, sty.columns__wnaT)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__cGb)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ryDzi
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__nJrr5
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__oOeYc)}
                            displayHeight={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? "343px"
                                : "450px"
                            }
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={(() => {
                              try {
                                return $queries.productDetails.data.response
                                  .image;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return {
                                    src: smallhpswebpMCwfsACvTtVq,
                                    fullWidth: 1080,
                                    fullHeight: 1080,
                                    aspectRatio: undefined
                                  };
                                }
                                throw e;
                              }
                            })()}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__c42Ao
                          )}
                        >
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__pGkns)}
                            displayHeight={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? "158px"
                                : "120px"
                            }
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? "158px"
                                : "auto"
                            }
                            loading={"lazy"}
                            src={{
                              src: smallhpswebpMCwfsACvTtVq,
                              fullWidth: 1080,
                              fullHeight: 1080,
                              aspectRatio: undefined
                            }}
                          />

                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__naMtV)}
                            displayHeight={"120px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"120px"}
                            loading={"lazy"}
                            src={{
                              src: crusherEvoBuyBoxTrueBlack2WebpRYagEe7Mxck,
                              fullWidth: 1080,
                              fullHeight: 1080,
                              aspectRatio: undefined
                            }}
                          />

                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__sNwPa)}
                            displayHeight={"120px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: crusherEvoBuyBoxTrueBlack3WebpTustGx3FvYGn,
                              fullWidth: 1080,
                              fullHeight: 1080,
                              aspectRatio: undefined
                            }}
                          />

                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___3Vpbt)}
                            displayHeight={"120px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: crusherEvoBuyBoxTrueBlack4Webp1VxxKAmUrIcd,
                              fullWidth: 1080,
                              fullHeight: 1080,
                              aspectRatio: undefined
                            }}
                          />

                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__x4Ve9)}
                            displayHeight={"120px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: crusherEvoBuyBoxTrueBlack5WebpIuUe1EpNhwm3,
                              fullWidth: 324,
                              fullHeight: 324,
                              aspectRatio: undefined
                            }}
                          />
                        </div>
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__fSqqa)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__qgJ7Y
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fs6X1
                          )}
                        >
                          <React.Fragment>
                            {(() => {
                              try {
                                return $queries.productDetails.data.response
                                  .description;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return "Sensory Bass Headphones With Personal Sound";
                                }
                                throw e;
                              }
                            })()}
                          </React.Fragment>
                        </div>
                        <h2
                          data-plasmic-name={"h2"}
                          data-plasmic-override={overrides.h2}
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2
                          )}
                        >
                          <React.Fragment>
                            {(() => {
                              try {
                                return $queries.productDetails.data.response
                                  .name;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return "CRUSHER\u00ae EVO";
                                }
                                throw e;
                              }
                            })()}
                          </React.Fragment>
                        </h2>
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1__iPxfz
                          )}
                        >
                          <React.Fragment>
                            {(() => {
                              try {
                                return (
                                  `$` +
                                  $queries.productDetails.data.response.price
                                );
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return "$169.99 ";
                                }
                                throw e;
                              }
                            })()}
                          </React.Fragment>
                        </h1>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fZLwi
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qhROo
                            )}
                          >
                            {"4 interest-free installments with "}
                          </div>
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__u98F9)}
                            displayHeight={"16px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"50%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: shopPaypngFiDDthMvyXMn,
                              fullWidth: 300,
                              fullHeight: 71,
                              aspectRatio: undefined
                            }}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__f5On0
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 700 }}
                            >
                              {"Color:"}
                            </span>
                            <React.Fragment>{" True Black"}</React.Fragment>
                          </React.Fragment>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___7TIXo
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__zo7Qh
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__aqOl0)}
                              displayHeight={"83px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={
                                hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mobileOnly"
                                )
                                  ? "200px"
                                  : "83px"
                              }
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"100%"}
                              loading={"lazy"}
                              src={{
                                src: smallhpswebpMCwfsACvTtVq,
                                fullWidth: 1080,
                                fullHeight: 1080,
                                aspectRatio: undefined
                              }}
                            />

                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__bPSaK)}
                              displayHeight={"83px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={
                                hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mobileOnly"
                                )
                                  ? "200px"
                                  : "83px"
                              }
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: crusherEvoBuyBoxMidnightPlum1WebpDR9DwE8ZCx5,
                                fullWidth: 1080,
                                fullHeight: 1080,
                                aspectRatio: undefined
                              }}
                            />

                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__pOsHc)}
                              displayHeight={"83px"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={
                                hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mobileOnly"
                                )
                                  ? "200px"
                                  : "83px"
                              }
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: crusherEvoChillGreyBuyBox1WebpP1EyhkuUdZpD,
                                fullWidth: 1080,
                                fullHeight: 1080,
                                aspectRatio: undefined
                              }}
                            />
                          </div>
                        </div>
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1__xilwH
                          )}
                        >
                          {"Limited Editions"}
                        </h1>
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img___0Qjwp)}
                          displayHeight={"83px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"83px"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: newBurtonCrusherRenderwebp6DudZzSkf9Yn,
                            fullWidth: 1080,
                            fullHeight: 1080,
                            aspectRatio: undefined
                          }}
                        />

                        <Button
                          data-plasmic-name={"button"}
                          data-plasmic-override={overrides.button}
                          className={classNames("__wab_instance", sty.button)}
                          onClick={async event => {
                            const $steps = {};
                            $steps["runCode"] = true
                              ? (() => {
                                  const actionArgs = {
                                    customFunction: async () => {
                                      return (() => {
                                        return fetch(
                                          "https://shoppingcart-n5cf.onrender.com/cart",
                                          {
                                            method: "POST",
                                            headers: {
                                              "Content-Type": "application/json"
                                            },
                                            body: JSON.stringify({
                                              productId:
                                                $queries.productDetails.data
                                                  .response.id,
                                              quantity: 1
                                            })
                                          }
                                        );
                                      })();
                                    }
                                  };
                                  return (({ customFunction }) => {
                                    return customFunction();
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["runCode"] != null &&
                              typeof $steps["runCode"] === "object" &&
                              typeof $steps["runCode"].then === "function"
                            ) {
                              $steps["runCode"] = await $steps["runCode"];
                            }
                          }}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___3BlIz
                            )}
                          >
                            {"ADD TO CART"}
                          </div>
                        </Button>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lNw52
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__p3Jst
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__d13DH)}
                              displayHeight={"auto"}
                              displayMaxHeight={"24px"}
                              displayMaxWidth={"24px"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: localShippingBlack24DpSmallsvgZckk7RyEIl,
                                fullWidth: 150,
                                fullHeight: 150,
                                aspectRatio: 1
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ew15A
                              )}
                            >
                              {"Free Shipping on Orders Over $75"}
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__rBytw
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__svpP)}
                              displayHeight={"100%"}
                              displayMaxHeight={"24px"}
                              displayMaxWidth={"24px"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: verifiedBlack24DpSmallsvgMfhCo86X7EdH,
                                fullWidth: 150,
                                fullHeight: 150,
                                aspectRatio: 1
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fuThc
                              )}
                            >
                              {"1-Year Limited Warranty"}
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___4XFwp
                            )}
                          >
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__fhw7D)}
                              displayHeight={"auto"}
                              displayMaxHeight={"24px"}
                              displayMaxWidth={"24px"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"auto"}
                              loading={"lazy"}
                              src={{
                                src: swapHorizBlack24DpSmallsvgMgwLQbPCdH3E,
                                fullWidth: 150,
                                fullHeight: 150,
                                aspectRatio: 1
                              }}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__oIHw2
                              )}
                            >
                              {"14-Day Returns on Any Purchase"}
                            </div>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mwrp3
                          )}
                        >
                          {"FEEL THE BASS, TUNED TO YOU\u2122."}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___3Bxgd
                          )}
                        >
                          {
                            "Get ready to experience the patented, skull-thumping power of Crusher Bass \u2014 now combined with the ultimate audio customization of Personal Sound. You\u2019ve never heard your music and movies like this before, because there\u2019s never been anything like this before."
                          }
                        </div>
                        {(() => {
                          const child$Props = {
                            activeKey: generateStateValueProp($state, [
                              "accordion",
                              __plasmic_idx_0,
                              "activePanelId"
                            ]),
                            bordered: true,
                            className: classNames(
                              "__wab_instance",
                              sty.accordion
                            ),
                            items: (
                              <React.Fragment>
                                <AntdAccordionItem
                                  className={classNames(
                                    "__wab_instance",
                                    sty.accordionItem__nsJAh
                                  )}
                                  destroyInactivePanel={false}
                                  forceRender={false}
                                  id={1}
                                  label2={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__hy7Jc
                                      )}
                                    >
                                      {"Additional Features"}
                                    </div>
                                  }
                                  showArrow={true}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___55QtU
                                    )}
                                  >
                                    {"First Children"}
                                  </div>
                                </AntdAccordionItem>
                                <AntdAccordionItem
                                  className={classNames(
                                    "__wab_instance",
                                    sty.accordionItem__vLpdd
                                  )}
                                  id={2}
                                  label2={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__xlj5P
                                      )}
                                    >
                                      {"Technical Specifications"}
                                    </div>
                                  }
                                  showArrow={true}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__yhPv5
                                    )}
                                  >
                                    {"Second Children"}
                                  </div>
                                </AntdAccordionItem>
                              </React.Fragment>
                            ),

                            onChange:
                              generateStateOnChangePropForCodeComponents(
                                $state,
                                "activePanelId",
                                ["accordion", __plasmic_idx_0, "activePanelId"],
                                AntdAccordion_Helpers
                              )
                          };
                          initializeCodeComponentStates(
                            $state,
                            [
                              {
                                name: "activePanelId",
                                plasmicStateName: "accordion[].activePanelId"
                              }
                            ],

                            [__plasmic_idx_0],
                            AntdAccordion_Helpers ?? {},
                            child$Props
                          );
                          initializePlasmicStates(
                            $state,
                            [
                              {
                                name: "accordion[].activePanelId",
                                initFunc: ({ $props, $state, $queries }) =>
                                  undefined
                              }
                            ],

                            [__plasmic_idx_0]
                          );
                          return (
                            <AntdAccordion
                              data-plasmic-name={"accordion"}
                              data-plasmic-override={overrides.accordion}
                              {...child$Props}
                            />
                          );
                        })()}
                      </div>
                    </div>
                  </div>
                </div>
              );
            })}
            <div className={classNames(projectcss.all, sty.freeBox___5M2Pm)}>
              <div className={classNames(projectcss.all, sty.freeBox__jEzxE)}>
                <Imagesecom
                  data-plasmic-name={"imagesecom"}
                  data-plasmic-override={overrides.imagesecom}
                  className={classNames("__wab_instance", sty.imagesecom)}
                />
              </div>
              <div className={classNames(projectcss.all, sty.columns__cjvFs)}>
                <div className={classNames(projectcss.all, sty.column__faf4M)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__vbp6T)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1___9CEJw
                      )}
                    >
                      {"CRUSHER BASS: NOTHING COMPARES."}
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dpo2Q
                      )}
                    >
                      {
                        "Don\u2019t just hear your music, feel it with Crusher \u2014 the original, one-and-only immersive adjustable sensory bass experience."
                      }
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.column__ujxbx)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__d6YtF)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__sTIj4
                      )}
                    >
                      {"FOR YOUR EARS ONLY."}
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kmZo
                      )}
                    >
                      {
                        "Personal Sound technology analyzes the hearing in your left and right ear, then automatically adjusts the audio to optimal levels for your specific hearing."
                      }
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <SkullcandyFooter
              data-plasmic-name={"skullcandyFooter"}
              data-plasmic-override={overrides.skullcandyFooter}
              className={classNames("__wab_instance", sty.skullcandyFooter)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "skullnavbar",
    "h2",
    "button",
    "accordion",
    "imagesecom",
    "skullcandyFooter"
  ],

  skullnavbar: ["skullnavbar"],
  h2: ["h2"],
  button: ["button"],
  accordion: ["accordion"],
  imagesecom: ["imagesecom"],
  skullcandyFooter: ["skullcandyFooter"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicProductpage__ArgProps,
          internalVariantPropNames: PlasmicProductpage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicProductpage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicProductpage";
  } else {
    func.displayName = `PlasmicProductpage.${nodeName}`;
  }
  return func;
}

function withPlasmicPageGuard(WrappedComponent) {
  const PageGuard = props => (
    <PlasmicPageGuard__
      minRole={null}
      appId={"sMuK5QvKwWGrkw9DYJKXqS"}
      authorizeEndpoint={"https://studio.plasmic.app/authorize"}
      canTriggerLogin={true}
    >
      <WrappedComponent {...props} />
    </PlasmicPageGuard__>
  );

  return PageGuard;
}

function withUsePlasmicAuth(WrappedComponent) {
  const WithUsePlasmicAuthComponent = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "sMuK5QvKwWGrkw9DYJKXqS"
    });
    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicProductpage = Object.assign(
  // Top-level PlasmicProductpage renders the root element
  withUsePlasmicAuth(withPlasmicPageGuard(makeNodeComponent("root"))),
  {
    // Helper components rendering sub-elements
    skullnavbar: makeNodeComponent("skullnavbar"),
    h2: makeNodeComponent("h2"),
    button: makeNodeComponent("button"),
    accordion: makeNodeComponent("accordion"),
    imagesecom: makeNodeComponent("imagesecom"),
    skullcandyFooter: makeNodeComponent("skullcandyFooter"),
    // Metadata about props expected for PlasmicProductpage
    internalVariantProps: PlasmicProductpage__VariantProps,
    internalArgProps: PlasmicProductpage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicProductpage;
/* prettier-ignore-end */
